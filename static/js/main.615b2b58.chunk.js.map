{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","showHideDetails","handleShowHideButton","setState","this","props","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","htmlFor","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","placeholder","mockData","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","eventCount","locationEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","atatus","install"],"mappings":"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","file":"static/js/main.615b2b58.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Event extends Component {\r\n  state = {\r\n    event: {},\r\n    showHideDetails: false,\r\n  };\r\n\r\n  handleShowHideButton = () => {\r\n    if (this.state.showHideDetails === true) {\r\n      this.setState({ showHideDetails: false });\r\n    } else {\r\n      this.setState({ showHideDetails: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <div className='event'>\r\n        <h1 className='name'>{event.summary}</h1>\r\n        <p>{event.start.dateTime}</p>\r\n        <p className='locations'>{event.location}</p>\r\n\r\n        {this.state.showHideDetails && (\r\n          <div className='event-details'>\r\n            <h2>About event:</h2>\r\n            <a href={event.htmlLink}>See Details on Google Calendar</a>\r\n            <p>{event.description}</p>\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          className='details-btn'\r\n          onClick={() => this.handleShowHideButton()}>\r\n          {!this.state.showHideDetails ? 'Show Details' : 'Hide Details'}\r\n        </button>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  \r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion, 0);\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='CitySearch'>\r\n        <label htmlFor='CitySearch'>Search a city for events</label>\r\n        <input type='text' className='city' \r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n\r\n        <ul className='suggestions' style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li key={'all'} onClick={() => this.handleItemClicked('all')}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 32,\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.props.updateEvents('', value);\r\n    this.setState({\r\n      numberOfEvents: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='NumberOfEvents'>\r\n        <label htmlFor='numberOfEvent'>Number of Events</label>\r\n        <input\r\n          type='number'\r\n          className='event-number-input'\r\n          placeholder='Enter Number of Events to display'\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n   },\r\n   {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n   }\r\n];\r\n\r\nexport {mockData};","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n  return result;\r\n};\r\n\r\nconst extractLocations = (events) => {\r\n  let extractLocations = events.map((event) => event.location);\r\n  let locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://dsv04ke6pg.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      let locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get('https://dsv04ke6pg.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url');\r\n      \r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://dsv04ke6pg.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n \n  state = {\n   events: [],\n   locations: [],\n   numberOfEvents: 32 \n }\n\n  updateEvents = (location, eventCount) => {\n    let locationEvents;\n    getEvents().then((events) => {\n      if (location === 'all' && eventCount === 0) {\n        locationEvents = events;\n      } else if (location !== 'all' && eventCount === 0) {\n        locationEvents = events.filter((event) => event.location === location);\n      } else if (location === '' && eventCount > 0) {\n        locationEvents = events.slice(0, eventCount);\n      }\n      this.setState({\n       events: locationEvents,\n       numberOfEvents: eventCount\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ \n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events) \n        });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} numberOfEvents={this.state.numberOfEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as atatus from 'atatus-spa';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\natatus.config('e7bce09581d04b0b8baca863030f1659').install();\n//atatus.notify(new Error('Test Atatus Setup'));\n"],"sourceRoot":""}